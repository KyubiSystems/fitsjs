// Generated by CoffeeScript 1.3.3
(function() {
  var FITS, require;

  require = window.require;

  FITS = require("fits");

  describe("FITS Image", function() {
    beforeEach(function() {
      return this.addMatchers({
        toBeNaN: function(expected) {
          return isNaN(this.actual) === isNaN(expected);
        }
      });
    });
    return it('can read a FITS data cube', function() {
      var fits, precision, xhr;
      precision = 6;
      fits = null;
      xhr = new XMLHttpRequest();
      xhr.open('GET', 'data/L1448_13CO.fits');
      xhr.responseType = 'arraybuffer';
      xhr.onload = function() {
        return fits = new FITS.File(xhr.response);
      };
      xhr.send();
      waitsFor(function() {
        return fits != null;
      });
      return runs(function() {
        var image;
        image = fits.getDataUnit();
        expect(image.isDataCube()).toBeTruthy();
        image.getFrame();
        expect(image.getPixel(0, 0)).toBeNaN();
        expect(image.getPixel(106, 0)).toBeNaN();
        expect(image.getPixel(106, 106)).toBeNaN();
        expect(image.getPixel(0, 106)).toBeNaN();
        expect(image.getPixel(54, 36)).toBeCloseTo(0.0340614, precision);
        expect(image.getPixel(100, 7)).toBeCloseTo(-0.0275259, precision);
        expect(image.getPixel(42, 68)).toBeCloseTo(-0.0534229, precision);
        expect(image.getPixel(92, 24)).toBeCloseTo(0.153861, precision);
        image.getFrame();
        expect(image.getPixel(0, 0)).toBeNaN();
        expect(image.getPixel(106, 0)).toBeNaN();
        expect(image.getPixel(106, 106)).toBeNaN();
        expect(image.getPixel(0, 106)).toBeNaN();
        expect(image.getPixel(54, 36)).toBeCloseTo(0.0329713, precision);
        expect(image.getPixel(100, 7)).toBeCloseTo(0.0763166, precision);
        expect(image.getPixel(42, 68)).toBeCloseTo(-0.103573, precision);
        expect(image.getPixel(92, 24)).toBeCloseTo(0.0360738, precision);
        image.getFrame(601);
        expect(image.getPixel(0, 0)).toBeNaN();
        expect(image.getPixel(106, 0)).toBeNaN();
        expect(image.getPixel(106, 106)).toBeNaN();
        expect(image.getPixel(0, 106)).toBeNaN();
        expect(image.getPixel(54, 36)).toBeCloseTo(-0.105564, precision);
        expect(image.getPixel(100, 7)).toBeCloseTo(0.202304, precision);
        expect(image.getPixel(42, 68)).toBeCloseTo(0.221437, precision);
        return expect(image.getPixel(92, 24)).toBeCloseTo(-0.163851, precision);
      });
    });
  });

}).call(this);
