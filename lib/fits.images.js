// Generated by CoffeeScript 1.3.3
(function() {
  var FITS;

  FITS = this.FITS || require('fits');

  FITS.Images = (function() {

    function Images() {
      this.images = {};
      this.keys = [];
      this.minimum = void 0;
      this.maximum = void 0;
      this.count = 0;
    }

    Images.prototype.getExtremes = function() {
      var extremes, image, key, maximums, minimums, _ref;
      minimums = [];
      maximums = [];
      _ref = this.images;
      for (key in _ref) {
        image = _ref[key];
        image.hdus[0].data.getFrameWebGL();
        extremes = image.hdus[0].data.getExtremes();
        minimums.push(extremes[0]);
        maximums.push(extremes[1]);
      }
      this.minimum = Math.min.apply(Math, minimums);
      return this.maximum = Math.max.apply(Math, maximums);
    };

    Images.prototype.addImage = function(image) {
      var filter;
      filter = image.hdus[0].header["FILTER"];
      this.keys.push(filter);
      this.images[filter] = image;
      this.count += 1;
      return this.__defineGetter__(filter, function() {
        return this.images[filter];
      });
    };

    Images.prototype.getWidth = function() {
      var key;
      key = this.keys[0];
      if (this.images[key] == null) {
        return null;
      }
      return this.images[key].hdus[0].header["NAXIS1"];
    };

    Images.prototype.getHeight = function() {
      var key;
      key = this.keys[0];
      if (this.images[key] == null) {
        return null;
      }
      return this.images[key].hdus[0].header["NAXIS2"];
    };

    Images.prototype.getCount = function() {
      return this.count;
    };

    Images.prototype.getData = function(filter) {
      return this[filter].hdus[0].data.data;
    };

    return Images;

  })();

  module.exports = FITS.Images;

}).call(this);
